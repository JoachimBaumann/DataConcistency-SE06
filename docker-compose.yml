version: "3.9"
services:
  ## FRONTEND
  reactservice:
    container_name: reactservice
    build:
      context: ReactAPITEST/frontend
      dockerfile: reactdocker
    ports:
      - "3000:3000"
    networks:
      - client
    links:
      - "nginxservice:nginxservice"
  ## CATALOG
  catalogservice:
    container_name: catalogservice
    depends_on:
      - catalogsql
    image: catalogservice
    restart: on-failure
    build:
      context: ./Catalog
      dockerfile: catalogService
    links:
      - "catalogsql:catalogsql"
    networks:
      - backend
  catalogsql:
    image: mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: "se06"
      MYSQL_DATABASE: "CatalogDB"

  ##  ACCOUNT
  accountservice:
    container_name: accountservice
    build:
      context: ./Account
      dockerfile: Account-Docker
    depends_on:
      - accountsql
    networks:
      - backend
    links:
      - "accountsql:accountsql"
  accountsql:
    image: mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: "se06"
      MYSQL_DATABASE: "accountDB"

  nginxservice:
    container_name: nginxservice
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - backend
      - client
    links:
      - biddingservice:biddingservice
      - catalogservice:catalogservice
      - accountservice:accountservice

  ## BIDDING
  biddingservice:
    container_name: biddingservice
    build:
      context: ./Biddingservice
      dockerfile: BiddingService
    networks:
      - backend

  ##KAFKA
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - backend
  broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend


networks:
  backend:
  client:
