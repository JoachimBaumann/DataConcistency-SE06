version: "3.9"
services:
## CATALOG
  catalogservice:
    depends_on:
      - catalogsql
    image: catalogservice
    restart: on-failure
    build:
      context: ./Catalog
      dockerfile: catalogService
    ports:
      - "8081:8080"
    links:
      - "catalogsql:catalogsql"
    networks:
      - main
  catalogsql:
    image: mysql
    networks:
      - main
    environment:
      MYSQL_ROOT_PASSWORD: "se06"
      MYSQL_DATABASE: "CatalogDB"

##  ACCOUNT
  accountservice:
    build:
      context: ./Account
      dockerfile: Account-Docker
    depends_on:
      - accountsql
    ports:
      - "8082:8080"
    networks:
      - main
    links:
      - "accountsql:accountsql"
  accountsql:
    image: mysql
    networks:
     - main
    environment:
      MYSQL_ROOT_PASSWORD: "se06"
      MYSQL_DATABASE: "accountDB"


  ## BIDDING
  biddingservice:
    build:
      context: ./Biddingservice
      dockerfile: BiddingService
    ports:
      - "8080:8080"
    networks:
      - main

##KAFKA
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - main
  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - main


networks:
  main:
